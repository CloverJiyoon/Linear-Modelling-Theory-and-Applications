knitr::opts_chunk$set(echo = TRUE, cache=T)
# make sure .csv file is in your working directory
bodyfat <- read.csv("bodyfat.csv")
head(bodyfat)
names(bodyfat)
hist(bodyfat$Biceps)
boxplot(bodyfat$Biceps)
idx <- which.max(bodyfat$Biceps) # find index of the largest point
bodyfat[idx, ]
plot(bodyfat$Biceps, bodyfat$Forearm)
par(mfrow=c(1,2))
scatter.smooth(bodyfat$Biceps, bodyfat$Forearm, col='gray')
title("Loess smoothing")
beta <- coef(lm(Forearm ~ Biceps, bodyfat))
plot(bodyfat$Biceps, bodyfat$Forearm, col='gray')
abline(beta[1], beta[2])
title("Linear regression")
n <- 10
x <- seq(-1,1, length.out = n)
y <- x + rnorm(n, sd=0.5)
par(mfrow=c(1,2))
scatter.smooth(x,y)
abline(0,1, lty=2)
title("Loess smoothing")
beta <- coef(lm(y ~ x))
plot(x,y)
abline(beta[1], beta[2])
abline(0,1, lty=2)
title("Linear regression")
n <- 500
x <- seq(-1,1, length.out = n)
y <- x + rnorm(n, sd=0.5)
par(mfrow=c(1,2))
scatter.smooth(x,y, col='gray')
abline(0,1, lty=2)
title("Loess smoothing")
beta <- coef(lm(y ~ x))
plot(x,y, col='gray')
abline(beta[1], beta[2])
abline(0,1, lty=2)
title("Linear regression")
n <- 100
x <- seq(-1,1, length.out = n)
y <- x^2 + rnorm(n, sd=0.1)
par(mfrow=c(1,2))
scatter.smooth(x,y, col='gray')
lines(x,x^2, lty=2)
title("Loess smoothing")
beta <- coef(lm(y ~ x))
plot(x,y, col='gray')
abline(beta[1], beta[2])
lines(x,x^2, lty=2)
title("Linear regression")
pairs(bodyfat)
# you may need to install the "reshape2" package
data(tips, package="reshape2")
names(tips)
plot(tips$total_bill, tips$tip)
coplot(tip ~ total_bill | sex, data=tips)
coplot(tip ~ total_bill | sex * time, data=tips)
pairs(~bodyfat + Neck + Abdomen, data=bodyfat)
coplot(bodyfat ~ Neck | Abdomen, data=bodyfat)
coplot(bodyfat ~ Neck | Abdomen, data=bodyfat, rows=1)
coplot(bodyfat ~ Neck | Abdomen, data=bodyfat, rows=1, number=8, overlap=0)
plot(bodyfat$Density, bodyfat$bodyfat, cex=0.5)
fit <- lm(bodyfat ~ Density, data=bodyfat)
summary(fit)
names(fit)
fit$coefficients # alternatively you can use coef(fit)
head(fit$residuals) # alternatively you can use residuals(fit)
plot(bodyfat$Density, bodyfat$bodyfat, cex=0.5)
abline(coef(fit))
plot(bodyfat$Density, residuals(fit), cex=0.5)
idx <- which(abs(residuals(fit)) > 1)
plot(bodyfat$Density[-idx], residuals(fit)[-idx], cex=0.5)
plot(1/bodyfat$Density, bodyfat$bodyfat, cex=0.5)
fitinv <- lm(bodyfat ~ I(1/Density), data=bodyfat)
coef(fitinv)
x <- seq(0.8, 1.2, length.out=100)
plot(x, 495/x - 450, type="l", ylab="body fat", xlab="density")
points(x, coef(fit)[1] + coef(fit)[2] * x, type="l", lty=2)
points(x, coef(fitinv)[1] + coef(fitinv)[2] * 1/x, type="l", lty=3)
I
a = matrix(1:4, 2,2)
a
b= matrix(1, 2,2)
b %*% a
(b %*% a)2
(b %*% a) /2
?array
mat <- matrix(rnorm(12), nrow = 3, ncol = 4)
mat
attributes(mat)
attributes(mat)
mat[5]
mat[4]
mat[1,2]
attributes(mat)
is.matrix(mat)
attributes(mat) <- NULL
is.matrix(mat)
typeof(NULL)
vec <- rnorm(12)
vec[c(3, 5)] <- NA
vec <- c(vec, NULL)
vec <- c(vec, NULL)
vec
myList <- list(a = 7, b = 5)
myList$a <- NULL  # works for data frames too
myList
myList
myList <- list(a = 7, b = 5)
myList
vec <- rnorm(12)
vec
vec <- c(vec,NULL)
vec
vec <- c(1:4)
vec
vec <- c(vec, 0)
vec
head(air)
cars
head(cars)
cars[[2]]
cars[[2]][1:3]
cars[2]
head(cars[[2]])
head(cars[2])
class(cars[2])
class(cars[[2]])
knitr::opts_chunk$set(echo = TRUE)
a <- read.csv("/Users/cloverjiyoon/Downloads/factbook.csv")
head(a)
View(a)
?read.csv
a <- read.csv("/Users/cloverjiyoon/Downloads/factbook.csv", sep = ";")
head(a)
View(a)
